{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Massage/Massage.jsx","components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","components/Dialogs/DialogsContaner.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Massage","massage","maxLength30","maxLengthCreator","AddMassageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","massagesPage","dialogs","map","d","key","massagesElements","massages","m","dialogsItems","formData","addNewMassage","newMassageText","mapStateToProps","state","isAuth","auth","compose","connect","withRouter","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCcnKC,EAXI,SAACC,GAClB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCIjBC,EAVC,SAACT,GAEf,OACI,6BACE,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,W,iCC0BpCC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACd,GACtB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAM,iBACNa,YAAa,oBACbC,SAAU,CAACC,IAAUZ,KAE3B,4CAOOa,EAxCC,SAACxB,GACf,IAAIyB,EAAkBzB,EAAM0B,aAAaC,QAAQC,KAAI,SAACC,GAAD,OACnD,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMN,GAAI2B,EAAE3B,GAAI4B,IAAKD,EAAE3B,QAGzC6B,EAAmB/B,EAAM0B,aAAaM,SAASJ,KAAI,SAACK,GAAD,OACrD,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE/B,QAOtC,OACE,yBAAKC,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAE8B,cAAeT,GACjC,yBAAKtB,UAAWC,IAAE4B,UACfD,EACD,kBAAClB,EAAD,CAAqBG,SATP,SAACmB,GACnBnC,EAAMoC,cAAcD,EAASE,sB,gEChB7BC,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SCQZE,sBACXC,aAPkB,SAACJ,GACnB,MAAO,CACHb,aAAca,EAAMb,gBAKA,CAACU,oBACzBQ,KDN4B,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMwC,OAGT,kBAACK,EAAcE,KAAK/C,OAFhB,kBAAC,IAAD,CAAUO,GAAI,eAJU,GACXyC,IAAMH,WAUtC,OADqCF,YAAQL,EAARK,CAAyBG,KCNnDJ,CAKdlB","file":"static/js/4.b79e3fc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"massages\":\"Dialogs_massages__3TLCQ\",\"massage\":\"Dialogs_massage__3fUKJ\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = `/dialogs/${props.id}`;\n\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div> \n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Massage = (props) => {\n\n  return (\n      <div>\n        <div className={s.massage}>{props.massage}</div>\n        \n      </div>\n  );\n};\n\nexport default Massage;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Massage from \"./Massage/Massage\";\nimport {Field, reduxForm} from 'redux-form';\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n// import { Redirect } from \"react-router-dom\";\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.massagesPage.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} key={d.id} />\n  ));\n\n  let massagesElements = props.massagesPage.massages.map((m) => (\n    <Massage massage={m.massage} key={m.id} />\n  ));\n\n  let addNewMassage = (formData) => {\n    props.addNewMassage(formData.newMassageText)\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.massages}>\n        {massagesElements}\n        <AddMassageFormRedux onSubmit={addNewMassage} />\n      </div>\n    </div>\n  );\n};\nconst maxLength30 = maxLengthCreator(30)\nconst AddMassageForm = (props) => {\n  return(\n      <form onSubmit={props.handleSubmit}>\n          <Field\n              component={TextArea}\n              name={'newMassageText'}\n              placeholder={\"Enter new massage\"}\n              validate={[required, maxLength30]}\n          />\n        <button>Send</button>\n      </form>\n  )\n}\n\nconst AddMassageFormRedux = reduxForm({form: 'dialogAddMassageForm'})(AddMassageForm)\n\nexport default Dialogs;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const WithAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth)\n                return <Redirect to={'/login'} />;\n\n            return <Component {...this.props} />\n        }\n\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}\n\n","import Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {addNewMassage} from \"../../redux/dialogs-reducer\";\nimport { compose } from \"redux\";\nimport { WithAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { withRouter } from \"react-router-dom\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        massagesPage: state.massagesPage,\n    };\n}\n\nexport default compose (\n    connect(mapStateToProps,{addNewMassage}),\n    withRouter,\n    WithAuthRedirect\n)\n(Dialogs);"],"sourceRoot":""}